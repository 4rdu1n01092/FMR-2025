#!/usr/bin/env pybricks-micropython
# Importar bibliotecas necessárias do Pybricks
from pybricks.hubs import EV3Brick
from pybricks.ev3devices import (Motor, TouchSensor, ColorSensor,
                                 InfraredSensor, UltrasonicSensor, GyroSensor)
from pybricks.parameters import Port, Stop, Direction, Button, Color
from pybricks.tools import wait, StopWatch, DataLog
from pybricks.robotics import DriveBase
from pybricks.media.ev3dev import SoundFile, ImageFile

# Definir blocos EV3 e motores
ev3 = EV3Brick()
RodaDireita = Motor(Port.B)
RodaEsquerda = Motor(Port.C)
CataTampa = Motor(Port.D)
MotorGarraAlta = Motor(Port.A)
SenseCorD = ColorSensor(Port.S3)
SenseCorE = ColorSensor(Port.S4)
SensorCorVermelhoCima = ColorSensor(Port.S1)
robot = DriveBase(RodaEsquerda, RodaDireita, wheel_diameter=56, axle_track=114)

pa_abaixada = False #Variavel para controlar o estado da pá
ev3.speaker.say ("Iniciando detecçãode vermelho")

while True:
    cor_detectada = SensorCorVermelhoCima.color()

    #Se detectar vermelho e a pá estiver levantada --> abaixar
    if cor_detectada == Color.RED and not pa_abaixada: 
        ev3.speaker.say("Vermelho detectado")
        ev3.screen.print("Vermelho detectado")
        MotorGarraAlta.run_angle(1000, -1500) #Desce a pá (ajuste o ângulo conforme o movimento)
        pa_abaixada = True

        #Se o vermelho sair da frente --> Levanta a pá 
    elif cor_detectada != Color.RED and pa_abaixada:
        ev3.speaker.say("Voltando")
        ev3.screen.print("Voltando")
        MotorGarraAlta.run_angle(1000, 1500)

        pa_abaixada = False 

        wait (50)